#!/usr/bin/python

import argparse
import urllib2
import json
import commands
import subprocess
import paramiko.agent
import base64
import hashlib
import os.path

home = os.path.expanduser("~")

user = 'phil'
cmd = 'ping'
options = [['ping', '666'], ['name', 'phil'], ['pong', '777']]

optionsHash = ''.join(sorted([k + v for k, v in options]))

cmdHash =  user + cmd + optionsHash

print cmdHash

response = urllib2.urlopen('http://localhost:8000/dh', json.dumps({ 'req-user': 'phil' }))

svRandBlob = json.load(response)['response']
svRand = base64.b64decode(svRandBlob)

print svRand

agent = paramiko.Agent()
keys = agent.get_keys()

if len(keys) < 1:
  subprocess.call('ssh-add')
  agent = paramiko.Agent()
  keys = agent.get_keys()

pubkeySha1 = ''

with open(home + '/.ssh/id_rsa.pub', 'r') as content_file:
  pubkey = content_file.read()
  pubkeySha1 = hashlib.sha1(pubkey).hexdigest()

  print(pubkeySha1)

sig = base64.b64encode(keys[0].sign_ssh_data(svRand + cmdHash))

print sig

response = urllib2.urlopen('http://localhost:8000/command', json.dumps(
  { 'cl-command' : 'create-user'
  , 'cl-options': [ ['name', 'adi']
                  , ['email', 'none']
                  , ['password', 'none']
                  , ['ssh-key', pubkey]
                  ]
  }))

print(json.load(response))

response = urllib2.urlopen('http://localhost:8000/command', json.dumps(
  { 'cl-command' : cmd
  , 'cl-user'    : user
  , 'cl-options' : options
  , 'cl-sig'     : [pubkeySha1, sig]
  }))

print(json.load(response))

parser = argparse.ArgumentParser(description='User configuration utility')

response = urllib2.urlopen('http://localhost:8000/info')
data = json.load(response)

subparsers = parser.add_subparsers(title='commands', help='-h gives command help')

for _, command in data['response']:
  subparser = subparsers.add_parser(command['name'], help='Help for command')

  if 'options' in command:
    for option in command['options']:
      subparser.add_argument('--' + option['name'], help=option['description'])

args = parser.parse_args()
